#!/bin/bash

# Exit immediately if a command exits with a non-zero status
set -e

# Color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Determine the root directory of the monorepo
ROOT_DIR=$(git rev-parse --show-toplevel)

# List of projects in the monorepo
PROJECTS=("aggregator" "authentication" "chat" "gateway" "real-time")

# Function to run pre-commit script for a given project
run_pre_commit() {
  local project=$1
  local script="$ROOT_DIR/backend/$project/scripts/pre-commit.sh"

  if [[ -f "$script" ]]; then
    echo -e "${BLUE}Running pre-commit for ${project}${NC}"

	# Indent output by 4 spaces
    stdbuf -o0 bash "$script" | sed -u 's/^/  /'

    echo -e "${GREEN}Pre-commit for ${project} completed successfully${NC}"
  else
    echo -e "${YELLOW}No pre-commit script found for ${project}${NC}"
  fi
}

# Get the list of staged files
STAGED_FILES=$(git diff --cached --name-only)

# Check if there are no staged files
if [ -z "$STAGED_FILES" ]; then
  echo -e "${RED}No staged files found. Pre-commit hooks will not be run.${NC}"
  exit 0
fi

# Iterate over each project to check if any staged files belong to the project
for project in "${PROJECTS[@]}"; do
  for file in $STAGED_FILES; do
    if [[ "$file" == "backend/$project/"* ]]; then
      run_pre_commit "$project"
      break
    fi
  done
done

echo -e "${GREEN}All pre-commit checks completed successfully${NC}"
