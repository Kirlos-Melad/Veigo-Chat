apiVersion: v1
kind: ConfigMap
metadata:
  name: pg-config
data:
  create-multiple-databases.sh: |
    #!/bin/bash

    set -e
    set -u

    function create_database() {
      local database=$1

      # Check if the database exists, if not, create it
      db_exists=$(psql -v ON_ERROR_STOP=1 -U "$POSTGRES_USER" -d "$POSTGRES_DB" -tAc "SELECT 1 FROM pg_database WHERE datname = '$database'")

      if [ "$db_exists" != "1" ]; then
        echo "Database '$database' does not exist, creating it..."
        psql -v ON_ERROR_STOP=1 -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "CREATE DATABASE $database OWNER $POSTGRES_USER;"
      else
        echo "Database '$database' already exists, skipping creation."
      fi
    }

    echo "Scanning environment variables for *_DB_NAME entries..."

    # Collect database names from env vars ending with _DB_NAME
    for service in $(env | grep '_DB_NAME=' | awk -F= '{print $1}'); do
      db_name="${!service}"
      if [ -n "$db_name" ]; then
        create_database "$db_name"
      fi
    done

    echo "Database(s) creation complete."
  set-wal-level.sh: |
    #!/bin/bash

    set -e
    set -u

    echo "Setting wal_level to logical for '$POSTGRES_USER'"

    psql -v ON_ERROR_STOP=1 -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "ALTER SYSTEM SET wal_level = 'logical';"