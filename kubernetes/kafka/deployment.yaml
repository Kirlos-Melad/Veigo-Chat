apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
data:
  KAFKA_CFG_PROCESS_ROLES: "broker"
  KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
  KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT"
  KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-controller
spec:
  clusterIP: None
  selector:
    app: kafka-controller
  ports:
    - name: controller
      port: 9093
      targetPort: 9093

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-broker
spec:
  selector:
    app: kafka-broker
  ports:
    - name: broker
      port: 9092
      targetPort: 9092
    - name: external
      port: 29092
      targetPort: 29092
      nodePort: 30092
  type: NodePort

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-controller
spec:
  serviceName: kafka-controller
  replicas: 1
  selector:
    matchLabels:
      app: kafka-controller
  template:
    metadata:
      labels:
        app: kafka-controller
    spec:
      containers:
        - name: kafka-controller
          image: bitnami/kafka:3.7
          env:
            - name: KAFKA_CFG_NODE_ID
              value: "0"
            - name: KAFKA_CFG_PROCESS_ROLES
              value: "controller"
            - name: KAFKA_CFG_LISTENERS
              value: "CONTROLLER://:9093"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "CONTROLLER://kafka-controller-0.kafka-controller:9093"
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: "CONTROLLER:PLAINTEXT"
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: "0@kafka-controller-0.kafka-controller:9093"
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "1"
              memory: "1Gi"

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-broker
spec:
  serviceName: kafka-broker
  replicas: 1
  selector:
    matchLabels:
      app: kafka-broker
  template:
    metadata:
      labels:
        app: kafka-broker
    spec:
      containers:
        - name: kafka-broker
          image: bitnami/kafka:3.7
          envFrom:
            - configMapRef:
                name: kafka-config
          env:
            - name: KAFKA_CFG_NODE_ID
              value: "1"
            - name: KAFKA_CFG_LISTENERS
              value: "PLAINTEXT://:9092,EXTERNAL://:29092"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka-broker-0.kafka-broker:9092,EXTERNAL://localhost:29092"
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: "0@kafka-controller-0.kafka-controller:9093"
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "2"
              memory: "2Gi"

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-ui
spec:
  selector:
    app: kafka-ui
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30080
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-ui
  template:
    metadata:
      labels:
        app: kafka-ui
    spec:
      containers:
        - name: kafka-ui
          image: provectuslabs/kafka-ui:v0.7.2
          env:
            - name: DYNAMIC_CONFIG_ENABLED
              value: "true"
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "256Mi"
